# Generated by Django 2.1.1 on 2018-09-22 07:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_name', models.CharField(max_length=40)),
                ('active_sw', models.BooleanField(default=True)),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='ApplicationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_sw', models.BooleanField(default=True)),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='ng.Application')),
            ],
            options={
                'db_table': 'application_contact',
            },
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_name', models.CharField(max_length=30)),
                ('dbms_type', models.CharField(choices=[('PostgreSQL', 'PostgreSQL'), ('MongoDB', 'MongoDB')], max_length=10)),
                ('environment', models.CharField(blank=True, choices=[('Sandbox', 'SBX'), ('Development', 'DEV'), ('Quality Assurance', 'QA'), ('User Acceptance Testing', 'UAT'), ('Production', 'PRD'), ('Post Production', 'PPD')], max_length=20)),
                ('requested_cpu', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(14)])),
                ('requested_mem_gb', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(64)])),
                ('requested_db_gb', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(102400)])),
                ('haproxy_port', models.IntegerField(validators=[django.core.validators.MinValueValidator(1024), django.core.validators.MaxValueValidator(65535)])),
                ('tls_enabled_sw', models.BooleanField()),
                ('backup_retention_days', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('health', models.CharField(max_length=20)),
                ('active_sw', models.BooleanField(default=True)),
                ('eff_dttm', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='ng.Application')),
            ],
            options={
                'db_table': 'cluster',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=60)),
                ('contact_type', models.CharField(max_length=30)),
                ('contact_phone', models.CharField(max_length=15)),
                ('active_sw', models.BooleanField(default=True)),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='PoolServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('environment', models.CharField(blank=True, choices=[('Sandbox', 'SBX'), ('Development', 'DEV'), ('Quality Assurance', 'QA'), ('User Acceptance Testing', 'UAT'), ('Production', 'PRD'), ('Post Production', 'PPD')], max_length=20)),
                ('server_name', models.CharField(max_length=30)),
                ('server_ip', models.CharField(max_length=14)),
                ('dbms_type', models.CharField(blank=True, choices=[('PostgreSQL', 'PostgreSQL'), ('MongoDB', 'MongoDB')], max_length=10)),
                ('cpu', models.DecimalField(decimal_places=1, max_digits=3)),
                ('mem_gb', models.DecimalField(decimal_places=1, max_digits=3)),
                ('db_gb', models.DecimalField(decimal_places=2, max_digits=5)),
                ('data_center', models.CharField(max_length=20)),
                ('status_in_pool', models.CharField(blank=True, choices=[('Available', 'Available'), ('Locked for Build', 'Locked'), ('Used', 'Used')], max_length=20)),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'pool_server',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_name', models.CharField(max_length=30)),
                ('server_ip', models.CharField(max_length=14)),
                ('cpu', models.DecimalField(decimal_places=1, max_digits=3)),
                ('mem_gb', models.DecimalField(decimal_places=1, max_digits=3)),
                ('db_gb', models.DecimalField(decimal_places=2, max_digits=5)),
                ('data_center', models.CharField(max_length=20)),
                ('node_role', models.CharField(blank=True, choices=[('Primary Node', 'Primary'), ('Secondary Node - Replication is Synchronous', 'SecondarySync'), ('Secondary Node- Replication is Asynchronous', 'SecondaryAsync'), ('Arbiter Node', 'Arbiter')], max_length=20)),
                ('os_version', models.CharField(max_length=30)),
                ('db_version', models.CharField(max_length=30)),
                ('pending_restart_sw', models.BooleanField(default=False)),
                ('active_sw', models.BooleanField(default=True)),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='ng.Cluster')),
            ],
            options={
                'db_table': 'server',
            },
        ),
        migrations.AddField(
            model_name='applicationcontact',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='ng.Contact'),
        ),
    ]
