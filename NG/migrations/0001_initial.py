# Generated by Django 2.1.1 on 2018-09-13 03:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appName', models.CharField(max_length=40)),
                ('activeSw', models.BooleanField()),
                ('createdDttm', models.DateTimeField(auto_now_add=True)),
                ('updatedDttm', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activeSw', models.BooleanField()),
                ('createdDttm', models.DateTimeField(auto_now_add=True)),
                ('updatedDttm', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='NG.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusterName', models.CharField(max_length=30)),
                ('dbms', models.CharField(choices=[('PostgreSQL', 'PostgreSQL'), ('MongoDB', 'MongoDB')], max_length=10)),
                ('requestedCpu', models.DecimalField(decimal_places=1, max_digits=3)),
                ('requestedMemGigs', models.DecimalField(decimal_places=1, max_digits=3)),
                ('requestedDbGigs', models.DecimalField(decimal_places=2, max_digits=4)),
                ('haPort', models.IntegerField(validators=[django.core.validators.MaxValueValidator(9999)])),
                ('tlsEnabled', models.BooleanField()),
                ('backupRetentionDays', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('health', models.CharField(max_length=20)),
                ('activeSw', models.BooleanField()),
                ('effDttm', models.DateTimeField(default=django.utils.timezone.now)),
                ('createdDttm', models.DateTimeField(auto_now_add=True)),
                ('updatedDttm', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='NG.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactName', models.CharField(max_length=60)),
                ('contactType', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=15)),
                ('activeSw', models.BooleanField()),
                ('createdDttm', models.DateTimeField(auto_now_add=True)),
                ('updatedDttm', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('envName', models.CharField(max_length=5)),
                ('envFullName', models.CharField(max_length=25)),
                ('activeSw', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PoolServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serverName', models.CharField(max_length=30)),
                ('serverIp', models.CharField(max_length=14)),
                ('dbms', models.CharField(choices=[('PostgreSQL', 'PostgreSQL'), ('MongoDB', 'MongoDB')], max_length=10)),
                ('cpu', models.DecimalField(decimal_places=1, max_digits=3)),
                ('memGigs', models.DecimalField(decimal_places=1, max_digits=3)),
                ('dbGigs', models.DecimalField(decimal_places=2, max_digits=4)),
                ('dataCenter', models.CharField(max_length=20)),
                ('activeSw', models.BooleanField()),
                ('createdDttm', models.DateTimeField(auto_now_add=True)),
                ('updatedDttm', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serverName', models.CharField(max_length=30)),
                ('serverIp', models.CharField(max_length=14)),
                ('cpu', models.DecimalField(decimal_places=1, max_digits=3)),
                ('memGigs', models.DecimalField(decimal_places=1, max_digits=3)),
                ('dbGigs', models.DecimalField(decimal_places=2, max_digits=4)),
                ('dataCenter', models.CharField(max_length=20)),
                ('arbiterNodeSw', models.BooleanField()),
                ('osVersion', models.CharField(max_length=30)),
                ('dbVersion', models.CharField(max_length=30)),
                ('activeSw', models.BooleanField()),
                ('createdDttm', models.DateTimeField(auto_now_add=True)),
                ('updatedDttm', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='cluster',
            name='environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='NG.Environment'),
        ),
        migrations.AddField(
            model_name='applicationcontact',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='NG.Contact'),
        ),
    ]
