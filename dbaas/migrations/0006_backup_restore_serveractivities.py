# Generated by Django 2.1.1 on 2018-09-30 19:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dbaas', '0005_auto_20180925_2155'),
    ]

    operations = [
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_type', models.CharField(choices=[('Full', 'Incremental'), ('Incr', 'Incremental'), ('Diff', 'Differential')], default='Full', max_length=10)),
                ('backup_status', models.CharField(max_length=15, null=True)),
                ('db_size_gb', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('backup_size_gb', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('start_dttm', models.DateTimeField()),
                ('stop_dttm', models.DateTimeField()),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.ProtectedError, to='dbaas.Cluster')),
            ],
            options={
                'db_table': 'backup',
            },
        ),
        migrations.CreateModel(
            name='Restore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_type', models.CharField(choices=[('Full', 'Incremental'), ('Incr', 'Incremental'), ('Diff', 'Differential')], default='Full', max_length=10)),
                ('restore_to_dttm', models.DateTimeField()),
                ('restore_status', models.CharField(max_length=15, null=True)),
                ('start_dttm', models.DateTimeField()),
                ('stop_dttm', models.DateTimeField()),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
                ('from_cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.ProtectedError, related_name='restore_from_cluster', to='dbaas.Cluster')),
                ('to_cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.ProtectedError, related_name='restore_to_cluster', to='dbaas.Cluster')),
            ],
            options={
                'db_table': 'restore',
            },
        ),
        migrations.CreateModel(
            name='ServerActivities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_activity', models.CharField(choices=[('RestartServer', 'Restart Server'), ('StopServer', 'StopServer'), ('StartServer', 'StsrtServer'), ('RestartDB', 'Restart Database'), ('PromoteDB', 'Promote Database'), ('DemomoteDB', 'Demomote Database')], default='RestartDB', max_length=20)),
                ('activity_status', models.CharField(max_length=15, null=True)),
                ('start_dttm', models.DateTimeField()),
                ('stop_dttm', models.DateTimeField()),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('updated_dttm', models.DateTimeField(auto_now=True)),
                ('server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.ProtectedError, to='dbaas.Server')),
            ],
            options={
                'db_table': 'server_activities',
            },
        ),
        migrations.RunSQL("create or replace view application_contacts_details_view as "
                          "  select a.id, c.id as contact_id, "
                          "  a.application_name, c.contact_name, c.contact_type, c.contact_phone, c.contact_email, c.active_sw "
                          "  from application_contact ac, application a, contact c "
                          "  where ac.application_id = a.id "
                          "  and ac.contact_id = c.id "
                          "  and ac.active_sw = TRUE",
                          "drop view application_contacts_details_view",)
    ]
