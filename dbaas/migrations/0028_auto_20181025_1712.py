# Generated by Django 2.1.1 on 2018-10-25 22:12

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        ('dbaas', '0027_auto_20181006_2203'),
    ]

    operations = [
        migrations.AddField(
            model_name='cluster',
            name='exp_dttm',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='backup',
            name='backup_size_gb',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
        migrations.AlterField(
            model_name='backup',
            name='db_size_gb',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
        migrations.AlterField(
            model_name='backup',
            name='start_dttm',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='backup',
            name='stop_dttm',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='backup_retention_days',
            field=models.IntegerField(default=14, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)]),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='environment',
            field=models.CharField(choices=[('SBX', 'Sandbox'), ('DEV', 'Development'), ('QA', 'Quality Assurance'), ('UAT', 'User Acceptance Testing'), ('PRD', 'Production'), ('PPD', 'Post Production')], default='', max_length=20),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='read_only_port',
            field=models.ForeignKey(default=65535, on_delete=django.db.models.deletion.ProtectedError, related_name='read_only_port_id', to='dbaas.ServerPort'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='read_write_port',
            field=models.ForeignKey(default=65535, on_delete=django.db.models.deletion.ProtectedError, related_name='read_write_port_id', to='dbaas.ServerPort'),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='requested_cpu',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(14)]),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='requested_db_gb',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(102400)]),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='requested_mem_gb',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(64)]),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='tls_enabled_sw',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='clusternote',
            name='created_by',
            field=models.CharField(default='', max_length=30),
        ),
        migrations.AlterField(
            model_name='clusternote',
            name='note_color',
            field=models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('danger', 'Danger'), ('warning', 'Warning'), ('info', 'Info'), ('light', 'Light'), ('dark', 'Dark')], default='', max_length=15),
        ),
        migrations.AlterField(
            model_name='contact',
            name='contact_email',
            field=models.EmailField(default='default@email.com', max_length=254),
        ),
        migrations.AlterField(
            model_name='contact',
            name='contact_type',
            field=models.CharField(choices=[('Person', 'Person'), ('Distro', 'Email Group Distro'), ('API', 'API Endpoint')], default='', max_length=30),
        ),
        migrations.AlterField(
            model_name='poolserver',
            name='dbms_type',
            field=models.CharField(choices=[('PostgreSQL', 'PostgreSQL'), ('MongoDB', 'MongoDB')], default='', max_length=10),
        ),
        migrations.AlterField(
            model_name='poolserver',
            name='environment',
            field=models.CharField(choices=[('SBX', 'Sandbox'), ('DEV', 'Development'), ('QA', 'Quality Assurance'), ('UAT', 'User Acceptance Testing'), ('PRD', 'Production'), ('PPD', 'Post Production')], default='', max_length=20),
        ),
        migrations.AlterField(
            model_name='poolserver',
            name='status_in_pool',
            field=models.CharField(choices=[('Available', 'Available'), ('Locked', 'Locked for Build'), ('Used', 'Used')], default='', max_length=20),
        ),
        migrations.AlterField(
            model_name='restore',
            name='restore_type',
            field=models.CharField(choices=[('Full', 'Restore Full'), ('DB', 'Restore Database'), ('Table', 'Restore Table')], default='', max_length=10),
        ),
        migrations.AlterField(
            model_name='restore',
            name='start_dttm',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='restore',
            name='stop_dttm',
            field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='server',
            name='node_role',
            field=models.CharField(choices=[('Primary', 'Primary Node'), ('SecondarySync', 'Secondary Node - Replication is Synchronous'), ('SecondaryAsync', 'Secondary Node- Replication is Asynchronous'), ('Arbiter', 'Arbiter Node')], default='', max_length=20),
        ),
        migrations.AlterField(
            model_name='server',
            name='server_health',
            field=models.CharField(choices=[('ServerConfig', 'Server Configuring'), ('ServerUp', 'Server Up and Healthy'), ('ServerUpWithIssues', 'Server is Up but something is Not Healthy'), ('ServerDown', 'Server is Down'), ('ServerOnLineMaint', 'Server On-Line Maintenance')], default='', max_length=20),
        ),
        # migrations.AlterField(
        #     model_name='serveractivities',
        #     name='activity_status',
        #     field=models.CharField(choices=[('Queued', 'Queued'), ('PendingRestart', 'PendingRestart'), ('Processing', 'Processing'), ('Failed', 'Failed'), ('Successful', 'Successful')], default='Queued', max_length=15),
        # ),
        # migrations.AlterField(
        #     model_name='serveractivities',
        #     name='start_dttm',
        #     field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        # ),
        # migrations.AlterField(
        #     model_name='serveractivities',
        #     name='stop_dttm',
        #     field=models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc)),
        # ),
        # migrations.AlterField(
        #     model_name='serverport',
        #     name='port_notes',
        #     field=models.CharField(default='', max_length=100),
        # ),
        migrations.AlterField(
            model_name='serverport',
            name='port_status',
            field=models.CharField(choices=[('Free', 'Free'), ('Locked', 'Locked'), ('Used', 'Used'), ('Hidden', 'Hidden')], default='Free', max_length=10),
        ),
    ]
